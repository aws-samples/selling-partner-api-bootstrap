/*
 * Selling Partner API for Sellers
 * The Selling Partner API for Sellers lets you retrieve information on behalf of sellers about their seller account, such as the marketplaces they participate in. Along with listing the marketplaces that a seller can sell in, the API also provides additional information about the marketplace such as the default language and the default currency. The API also provides seller-specific information such as whether the seller has suspended listings in that marketplace.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cn.amazon.aws.rp.spapi.clients.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Detailed information about an Amazon market where a seller can list items for sale and customers can view and purchase items.
 */
//TODO:: define a dto
@ApiModel(description = "Detailed information about an Amazon market where a seller can list items for sale and customers can view and purchase items.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-12T16:51:35.500+08:00")
@DynamoDBDocument
public class Marketplace {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  @SerializedName("defaultCurrencyCode")
  private String defaultCurrencyCode = null;

  @SerializedName("defaultLanguageCode")
  private String defaultLanguageCode = null;

  @SerializedName("domainName")
  private String domainName = null;

  public Marketplace id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The encrypted marketplace value.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The encrypted marketplace value.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Marketplace name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Marketplace name.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Marketplace name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Marketplace countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * The ISO 3166-1 alpha-2 format country code of the marketplace.
   * @return countryCode
  **/
  @ApiModelProperty(required = true, value = "The ISO 3166-1 alpha-2 format country code of the marketplace.")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Marketplace defaultCurrencyCode(String defaultCurrencyCode) {
    this.defaultCurrencyCode = defaultCurrencyCode;
    return this;
  }

   /**
   * The ISO 4217 format currency code of the marketplace.
   * @return defaultCurrencyCode
  **/
  @ApiModelProperty(required = true, value = "The ISO 4217 format currency code of the marketplace.")
  public String getDefaultCurrencyCode() {
    return defaultCurrencyCode;
  }

  public void setDefaultCurrencyCode(String defaultCurrencyCode) {
    this.defaultCurrencyCode = defaultCurrencyCode;
  }

  public Marketplace defaultLanguageCode(String defaultLanguageCode) {
    this.defaultLanguageCode = defaultLanguageCode;
    return this;
  }

   /**
   * The ISO 639-1 format language code of the marketplace.
   * @return defaultLanguageCode
  **/
  @ApiModelProperty(required = true, value = "The ISO 639-1 format language code of the marketplace.")
  public String getDefaultLanguageCode() {
    return defaultLanguageCode;
  }

  public void setDefaultLanguageCode(String defaultLanguageCode) {
    this.defaultLanguageCode = defaultLanguageCode;
  }

  public Marketplace domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

   /**
   * The domain name of the marketplace.
   * @return domainName
  **/
  @ApiModelProperty(required = true, value = "The domain name of the marketplace.")
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Marketplace marketplace = (Marketplace) o;
    return Objects.equals(this.id, marketplace.id) &&
        Objects.equals(this.name, marketplace.name) &&
        Objects.equals(this.countryCode, marketplace.countryCode) &&
        Objects.equals(this.defaultCurrencyCode, marketplace.defaultCurrencyCode) &&
        Objects.equals(this.defaultLanguageCode, marketplace.defaultLanguageCode) &&
        Objects.equals(this.domainName, marketplace.domainName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, countryCode, defaultCurrencyCode, defaultLanguageCode, domainName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Marketplace {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    defaultCurrencyCode: ").append(toIndentedString(defaultCurrencyCode)).append("\n");
    sb.append("    defaultLanguageCode: ").append(toIndentedString(defaultLanguageCode)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cn.amazon.aws.rp.spapi.clients.model;

import java.util.Objects;
import java.util.Arrays;
import cn.amazon.aws.rp.spapi.clients.model.AttributeSetList;
import cn.amazon.aws.rp.spapi.clients.model.IdentifierType;
import cn.amazon.aws.rp.spapi.clients.model.RelationshipList;
import cn.amazon.aws.rp.spapi.clients.model.SalesRankList;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * An item in the Amazon catalog.
 */
@ApiModel(description = "An item in the Amazon catalog.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-12-16T17:41:56.163+08:00")
public class Item {
  @SerializedName("Identifiers")
  private IdentifierType identifiers = null;

  @SerializedName("AttributeSets")
  private AttributeSetList attributeSets = null;

  @SerializedName("Relationships")
  private RelationshipList relationships = null;

  @SerializedName("SalesRankings")
  private SalesRankList salesRankings = null;

  public Item identifiers(IdentifierType identifiers) {
    this.identifiers = identifiers;
    return this;
  }

   /**
   * The identifiers that uniquely identify the item.
   * @return identifiers
  **/
  @ApiModelProperty(required = true, value = "The identifiers that uniquely identify the item.")
  public IdentifierType getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(IdentifierType identifiers) {
    this.identifiers = identifiers;
  }

  public Item attributeSets(AttributeSetList attributeSets) {
    this.attributeSets = attributeSets;
    return this;
  }

   /**
   * A list of attributes of the item.
   * @return attributeSets
  **/
  @ApiModelProperty(value = "A list of attributes of the item.")
  public AttributeSetList getAttributeSets() {
    return attributeSets;
  }

  public void setAttributeSets(AttributeSetList attributeSets) {
    this.attributeSets = attributeSets;
  }

  public Item relationships(RelationshipList relationships) {
    this.relationships = relationships;
    return this;
  }

   /**
   * A list of variation relationship information for the item.
   * @return relationships
  **/
  @ApiModelProperty(value = "A list of variation relationship information for the item.")
  public RelationshipList getRelationships() {
    return relationships;
  }

  public void setRelationships(RelationshipList relationships) {
    this.relationships = relationships;
  }

  public Item salesRankings(SalesRankList salesRankings) {
    this.salesRankings = salesRankings;
    return this;
  }

   /**
   * A list of sales rank information for the item by category.
   * @return salesRankings
  **/
  @ApiModelProperty(value = "A list of sales rank information for the item by category.")
  public SalesRankList getSalesRankings() {
    return salesRankings;
  }

  public void setSalesRankings(SalesRankList salesRankings) {
    this.salesRankings = salesRankings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.identifiers, item.identifiers) &&
        Objects.equals(this.attributeSets, item.attributeSets) &&
        Objects.equals(this.relationships, item.relationships) &&
        Objects.equals(this.salesRankings, item.salesRankings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifiers, attributeSets, relationships, salesRankings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    attributeSets: ").append(toIndentedString(attributeSets)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("    salesRankings: ").append(toIndentedString(salesRankings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

